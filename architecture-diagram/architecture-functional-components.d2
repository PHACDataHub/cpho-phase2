direction: down

user: User's\nBrowser {
  icon: ./icons/general/laptop.svg
  style: {
    stroke: blue
    fill: "#e1f6fe"
  }
  unauthed-traffic: Unauthenticated\nsession {
    icon: ./icons/general/person.svg
    shape: image
    style: {
      font-color: red
    }
  }

  authed-traffic: Authenticated\nsession {
    icon: ./icons/general/person.svg
    shape: image
    style: {
      font-color: green
    }
  }
}

active-directory: Health Canada's\nAzure Active Directory\nsign in page {
  icon: ./icons/general/Azure-Active-Directory.svg
  shape: image
}

gcp: PHAC Google Cloud Org {
  icon: ./icons/gcp/logo.svg
  style: {
    stroke: "#000000"
    fill: "#f1f3f4"
  }

  project: HoPiC Google Cloud Project {
    icon: ./icons/general/folder.svg
    style: {
      stroke: "#ffffff"
      fill: "#e1f6fe"
    }

    loadbalancer: Target-pool\nNetwork Load\nBalancer {
      icon: ./icons/gcp/cloud_load_balancer.svg
      shape: image
    }

    vpc: VPC - 10.162.0.0/20 {
      icon: ./icons/gcp/virtual_private_cloud.svg
      style: {
        stroke: blue
        font-color: blue
        stroke-dash: 3
        fill: transparent
      }

      fw: Firewall {
        icon: ./icons/gcp/cloud_firewall_rules.svg
        style: {
          stroke: black
          font-color: black
          stroke-dash: 3
          fill: transparent
        }

        k8s: Google Kubernetes Engine Autopilot Cluster (Managed PaaS) {
          icon: ./icons/gcp/anthos_service_mesh.svg
          style: {
            stroke: blue
            font-color: blue
            fill: transparent
          }

          istio_ingress: istio-ingress {
            icon: ./icons/kubernetes/ns.svg
            style: {
              stroke: brown
              stroke-dash: 10
              font-color: blue
              fill: transparent
            }

            ingress: Cluster Ingress Gateway,\nterminates client TLS,\nswitches to cluster internal\nmutual TLS network {
              icon: ./icons/kubernetes/pod.svg
              shape: image
            }
          }

          server: server {
            icon: ./icons/kubernetes/ns.svg
            style: {
              stroke: brown
              stroke-dash: 10
              font-color: blue
              fill: transparent
            }

            app-secrets: App Secrets,\ninjected in containers\nas env vars at run-time {
              icon: ./icons/kubernetes/secret.svg
              shape: image
            }

            django: Django App Container(s) {
              icon: ./icons/kubernetes/pod.svg
              shape: image
            }

            pg: PostgreSQL DB Cluster {
              icon: ./icons/kubernetes/pod.svg
              shape: image
            }
          }
        }
      }
    }
  }
}

# unauthed traffic flow
user.unauthed-traffic -> gcp.project.loadbalancer: Unauthenticated\nclient request\n(HTTPS) {style: {stroke: red}}
gcp.project.loadbalancer -> gcp.project.vpc.fw.k8s.istio_ingress.ingress: "" {style: {stroke: red}}
gcp.project.vpc.fw.k8s.istio_ingress.ingress -> gcp.project.vpc.fw.k8s.server.django: "" {style: {stroke: red}}
gcp.project.vpc.fw.k8s.server.django -> active-directory: oAuth redirect\nfor SSO (HTTPS) {style: {stroke: red}}
active-directory -> user.authed-traffic: oAuth return\nredirect (HTTPS) {style: {stroke: red}}

# authed traffic flow
user.authed-traffic -> gcp.project.loadbalancer: Client request\nwith bearer token\n(HTTPS) {style: {stroke: green}}
gcp.project.loadbalancer -> gcp.project.vpc.fw.k8s.istio_ingress.ingress: "" {style: {stroke: green}}
gcp.project.vpc.fw.k8s.istio_ingress.ingress -> gcp.project.vpc.fw.k8s.server.django: "" {style: {stroke: green}}
gcp.project.vpc.fw.k8s.server.django -> gcp.project.vpc.fw.k8s.server.pg: PostgreSQL protocol\nwith mutual TLS {style: {stroke: green}}

# django pod management
gcp.project.vpc.fw.k8s.server.app-secrets -> gcp.project.vpc.fw.k8s.server.django: "" {style: {stroke: grey}}
