# When manually triggering a cloud build from dev, you need to manually provide a COMMIT_SHA 
# substitution value. I recommend the following pattern:
# ```
# gcloud builds submit --config cloudbuild.yaml --substitutions COMMIT_SHA="local$(date +%s)"
# ```


# [START cloudrun_django_cloudbuild]
steps:
  - id: "get .env.cloud_build and .env.prod files for configuration in subsequent steps"
    name: gcr.io/cloud-builders/gcloud
    script: |
      #!/usr/bin/env bash
      set -o errexit
      set -o pipefail
      set -o nounset

      cd server

      echo "Write .env.cloud_build to disk, to provide consistent project configuration values in subsequent steps"
      deploy/make_cloud_build_env_file.sh

      echo "Write server/.env.prod to disk, to provide configuration and secrets for the app run-time image built in subsequent steps"
      deploy/make_prod_env_file.sh

  - id: "build and push image"
    name: "gcr.io/cloud-builders/docker"
    env:
      - "COMMIT_SHA=$COMMIT_SHA"
    script: |
      #!/usr/bin/env bash
      set -o errexit
      set -o pipefail
      set -o nounset
      
      echo "Get cloud build project configuration values"
      source .env.cloud_build

      echo "Build a new application run time image"
      docker build -t ${BUILD_CLOUD_RUN_IMAGE_NAME}:${COMMIT_SHA} ./server

      echo "Remove .env.prod, no longer needed"
      rm server/.env.prod

      echo "Push the new image to the project's artifact registry"
      docker push ${BUILD_CLOUD_RUN_IMAGE_NAME}:${COMMIT_SHA}

  - id: "deploy to cloud run"
    name: "gcr.io/cloud-builders/gcloud"
    env:
      - "COMMIT_SHA=$COMMIT_SHA"
    script: |
      #!/usr/bin/env bash
      set -o errexit
      set -o pipefail
      set -o nounset
      
      echo "Get cloud build project configuration values"
      source .env.cloud_build

      echo "Deploy new image to Cloud Run"
      gcloud run deploy ${PROJECT_SERVICE_NAME} \
        --image ${BUILD_CLOUD_RUN_IMAGE_NAME}:${COMMIT_SHA} \
        --region ${PROJECT_REGION} \
        --add-cloudsql-instances ${DB_INSTANCE_NAME} \
        --vpc-connector ${VPC_CONNECTOR_NAME} \
        --platform managed \
        --allow-unauthenticated
# [END cloudrun_django_cloudbuild]
