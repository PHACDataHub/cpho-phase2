# To manually trigger your cloudbuild.yaml, use: gcloud builds submit --config cloudbuild.yaml
# NOTE: when manually triggering, the COMMIT_SHA env var will be unset,
# you'll need to modify the file temporarily to not reference it

# [START cloudrun_django_cloudbuild]
steps:
  - id: "make .env.prod file"
    name: gcr.io/cloud-builders/gcloud
    entrypoint: 'bash'
    args: [ '-c', "cd server && deploy/make_prod_env_file.sh" ]

  - id: "build image"
    name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "${_IMAGE_NAME}", "server/."]

  - id: "push image"
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "${_IMAGE_NAME}"]

  - id: "deploy to cloud run"
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      [
        "run",
        "deploy",
        "${_SERVICE_NAME}",
        "--image",
        "${_IMAGE_NAME}",
        "--region",
        "${_REGION}",
        "--add-cloudsql-instances",
        "${_SQL_INSTANCE}",
        "--platform",
        "managed",
        "--vpc-connector",
        "${_VPC_CONNECTOR}",
        "--allow-unauthenticated"
      ]

# TODO these need to be in sync with deploy/gcloud_env_vars.sh, annoying as-is
substitutions:
  _SERVICE_NAME: "cpho-phase2"
  _REGION: northamerica-northeast1
  _IMAGE_NAME: "${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_SERVICE_NAME}-artifact-registry-for-cloud-run/${_SERVICE_NAME}" # :${COMMIT_SHA}"
  _SQL_INSTANCE: "${PROJECT_ID}:${_REGION}:${_SERVICE_NAME}-db-instance"
  _VPC_CONNECTOR: "${_SERVICE_NAME}-sql-to-run"

images:
  - "${_IMAGE_NAME}"
# [END cloudrun_django_cloudbuild]
