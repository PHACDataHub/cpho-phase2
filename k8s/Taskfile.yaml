version: '3'

vars:
  PROJECT_ID: pht-01hp04dtnkf
  REGION: northamerica-northeast1
  NAME: hopic
  FLEET_HOST_PROJECT_ID: php-fleet-monitoring


tasks:

  infra-up:
    desc: Create infrastructure components upto the cluster-level
    vars:
      CURRENT_DATE:
        sh: echo {{now | date "2006-01-02"}}
    cmds:
      # Enable APIs
      - gcloud services enable container.googleapis.com --project={{.PROJECT_ID}}
      - gcloud services enable mesh.googleapis.com --project={{.PROJECT_ID}}
      - gcloud services enable serviceusage.googleapis.com --project={{.PROJECT_ID}}

      # Setup network / subnetwork for GKE
      - |
        gcloud compute networks create {{.NAME}}-net --subnet-mode=custom \
          --bgp-routing-mode=regional --mtu=1460 --project={{.PROJECT_ID}}
      - |
        gcloud compute networks subnets create {{.NAME}}-subnet --network={{.NAME}}-net \
          --range=10.162.0.0/20 --region={{.REGION}} --enable-flow-logs \
          --project={{.PROJECT_ID}}

      # Setup GKE with https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#use_least_privilege_sa
      - gcloud iam service-accounts create gke-default --project {{.PROJECT_ID}}
      - |
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}} \
          --member "serviceAccount:gke-default@{{.PROJECT_ID}}.iam.gserviceaccount.com" \
          --role roles/logging.logWriter
      - |
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}} \
          --member "serviceAccount:gke-default@{{.PROJECT_ID}}.iam.gserviceaccount.com" \
          --role roles/monitoring.metricWriter
      - |
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}} \
          --member "serviceAccount:gke-default@{{.PROJECT_ID}}.iam.gserviceaccount.com" \
          --role roles/monitoring.viewer
      - |
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}} \
          --member "serviceAccount:gke-default@{{.PROJECT_ID}}.iam.gserviceaccount.com" \
          --role roles/stackdriver.resourceMetadata.writer
      - |
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}} \
          --member "serviceAccount:gke-default@{{.PROJECT_ID}}.iam.gserviceaccount.com" \
          --role roles/autoscaling.metricsWriter
      - |
        gcloud container --project={{.PROJECT_ID}} clusters create-auto {{.NAME}}-cluster \
          --region={{.REGION}} --release-channel "regular" \
          --network="projects/{{.PROJECT_ID}}/global/networks/{{.NAME}}-net" \
          --subnetwork="projects/{{.PROJECT_ID}}/regions/{{.REGION}}/subnetworks/{{.NAME}}-subnet" \
          --service-account="gke-default@{{.PROJECT_ID}}.iam.gserviceaccount.com"
      - |
        gcloud container --project={{.PROJECT_ID}} clusters update {{.NAME}}-cluster \
          --maintenance-window-start {{.CURRENT_DATE}}T13:00:00Z \
          --maintenance-window-end {{.CURRENT_DATE}}T19:00:00Z \
          --maintenance-window-recurrence 'FREQ=WEEKLY;BYDAY=WE,TH,FR'

      # Setup provisioner account for config connnector
      - |
        gcloud iam service-accounts create {{.NAME}}-provisioner --project {{.PROJECT_ID}}
      - |
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}} \
          --member="serviceAccount:{{.NAME}}-provisioner@{{.PROJECT_ID}}.iam.gserviceaccount.com" \
          --role="roles/owner"
      - |
        gcloud iam service-accounts add-iam-policy-binding \
          {{.NAME}}-provisioner@{{.PROJECT_ID}}.iam.gserviceaccount.com \
          --member="serviceAccount:{{.PROJECT_ID}}.svc.id.goog[cnrm-system/cnrm-controller-manager-configconnector-resources]" \
          --role="roles/iam.workloadIdentityUser" --project {{.PROJECT_ID}}
      - |
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}} \
          --member="serviceAccount:{{.NAME}}-provisioner@{{.PROJECT_ID}}.iam.gserviceaccount.com" \
          --role="roles/monitoring.metricWriter"
      # Create regional cloud armor security policy since it's not supported by config connector
      - |
         gcloud compute security-policies create "{{.NAME}}-waf" \
           --description "Secuirty policy with sensible baseline configuration for an external load balancer" \
           --region={{.REGION}}
      - |
        preconfigured_waf_rules=(
           "'lfi-v33-stable'"
           "'rfi-v33-stable'"
           "'rce-v33-stable', {'opt_out_rule_ids': ['owasp-crs-v030301-id932200-rce', 'owasp-crs-v030301-id932190-rce']}"
           "'methodenforcement-v33-stable'"
           "'scannerdetection-v33-stable'"
           "'protocolattack-v33-stable', {'opt_out_rule_ids': ['owasp-crs-v030301-id921170-protocolattack', 'owasp-crs-v030301-id921150-protocolattack', 'owasp-crs-v030301-id921120-protocolattack']}"
           "'sessionfixation-v33-stable'"
        )
        level_incrementor=9000
        for rule in "${preconfigured_waf_rules[@]}"; do
          gcloud compute security-policies rules create "${level_incrementor}" \
            --security-policy "{{.NAME}}-waf" \
            --expression "evaluatePreconfiguredWaf(${rule})" \
            --action deny-403 \
            --region="{{.REGION}}" \
            --project="{{.PROJECT_ID}}"
          level_incrementor=$((level_incrementor + 1))
        done

  install-asm:
    desc: Install and configure ASM. See https://cloud.google.com/service-mesh/docs/managed/provision-managed-anthos-service-mesh for details
    cmds:
      - |
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}} \
          --member "serviceAccount:service-{{.FLEET_HOST_PROJECT_NUMBER}}@gcp-sa-servicemesh.iam.gserviceaccount.com" \
          --role roles/anthosservicemesh.serviceAgent
      - |
        gcloud projects add-iam-policy-binding {{.FLEET_HOST_PROJECT_ID}} \
          --member "serviceAccount:service-{{.FLEET_HOST_PROJECT_NUMBER}}@gcp-sa-gkehub.iam.gserviceaccount.com" \
          --role roles/gkehub.serviceAgent
      - |
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}} \
          --member "serviceAccount:service-{{.FLEET_HOST_PROJECT_NUMBER}}@gcp-sa-gkehub.iam.gserviceaccount.com" \
          --role roles/gkehub.serviceAgent
      - |
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}} \
          --member "serviceAccount:service-{{.FLEET_HOST_PROJECT_NUMBER}}@gcp-sa-gkehub.iam.gserviceaccount.com" \
          --role roles/gkehub.crossProjectServiceAgent
      - |
        gcloud container clusters update {{.NAME}}-cluster --location={{.REGION}} \
          --fleet-project={{.FLEET_HOST_PROJECT_ID}} --project={{.PROJECT_ID}}
      - |
        gcloud container fleet mesh update \
         --management automatic \
         --memberships {{.NAME}}-cluster \
         --project {{.FLEET_HOST_PROJECT_ID}} \
         --location {{.REGION}}
    vars:
      FLEET_HOST_PROJECT_NUMBER:
        sh: gcloud projects describe {{.FLEET_HOST_PROJECT_ID}} --format "value(projectNumber)"

  install-flux:
    desc: Install and configure Flux
    cmds:
      - |
        flux bootstrap git \
          --url=ssh://git@github.com/PHACDataHub/cpho-phase2 \
          --branch=main \
          --path=./k8s/ \
          --components="source-controller,kustomize-controller,notification-controller" \
          --components-extra="image-reflector-controller,image-automation-controller"
