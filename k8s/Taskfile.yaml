version: '3'

vars:
  PROJECT_ID: pht-01hp04dtnkf
  REGION: northamerica-northeast1
  NAME: hopic
  FLEET_HOST_PROJECT_ID: php-fleet-monitoring


tasks:

  infra-up:
    desc: Create infrastructure components upto the cluster-level
    cmds:
      - gcloud services enable container.googleapis.com --project={{.PROJECT_ID}}
      - gcloud services enable mesh.googleapis.com --project={{.PROJECT_ID}}
      - gcloud services enable serviceusage.googleapis.com --project={{.PROJECT_ID}}
      - |
        gcloud compute networks create {{.NAME}}-net --subnet-mode=custom \
          --bgp-routing-mode=regional --mtu=1460 --project={{.PROJECT_ID}}
      - |
        gcloud compute networks subnets create {{.NAME}}-subnet --network={{.NAME}}-net \
          --range=10.162.0.0/20 --region={{.REGION}} --enable-flow-logs \
          --project={{.PROJECT_ID}}
      - |
        gcloud beta container --project={{.PROJECT_ID}} clusters create-auto {{.NAME}} \
          --region={{.REGION}} --release-channel "regular" \
          --network="projects/{{.PROJECT_ID}}/global/networks/{{.NAME}}-net" \
          --subnetwork="projects/{{.PROJECT_ID}}/regions/northamerica-northeast1/subnetworks/{{.NAME}}-subnet"
      - |
        gcloud iam service-accounts create {{.NAME}}-provisioner --project {{.PROJECT_ID}}
      - |
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}} \
          --member="serviceAccount:{{.NAME}}-provisioner@{{.PROJECT_ID}}.iam.gserviceaccount.com" \
          --role="roles/owner"
      - |
        gcloud iam service-accounts add-iam-policy-binding \
          {{.NAME}}-provisioner@{{.PROJECT_ID}}.iam.gserviceaccount.com \
          --member="serviceAccount:{{.PROJECT_ID}}.svc.id.goog[cnrm-system/cnrm-controller-manager-cnrm-system]" \
          --role="roles/iam.workloadIdentityUser" --project {{.PROJECT_ID}}
      - |
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}} \
          --member="serviceAccount:{{.NAME}}-provisioner@{{.PROJECT_ID}}.iam.gserviceaccount.com" \
          --role="roles/monitoring.metricWriter"

  install-asm:
    desc: Install and configure ASM. See https://cloud.google.com/service-mesh/docs/managed/provision-managed-anthos-service-mesh for details
    cmds:
      - |
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}} \
          --member "serviceAccount:service-{{.FLEET_HOST_PROJECT_NUMBER}}@gcp-sa-servicemesh.iam.gserviceaccount.com" \
          --role roles/anthosservicemesh.serviceAgent
      - |
        gcloud projects add-iam-policy-binding {{.FLEET_HOST_PROJECT_ID}} \
          --member "serviceAccount:service-{{.FLEET_HOST_PROJECT_NUMBER}}@gcp-sa-gkehub.iam.gserviceaccount.com" \
          --role roles/gkehub.serviceAgent
      - |
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}} \
          --member "serviceAccount:service-{{.FLEET_HOST_PROJECT_NUMBER}}@gcp-sa-gkehub.iam.gserviceaccount.com" \
          --role roles/gkehub.serviceAgent
      - |
        gcloud projects add-iam-policy-binding {{.PROJECT_ID}} \
          --member "serviceAccount:service-{{.FLEET_HOST_PROJECT_NUMBER}}@gcp-sa-gkehub.iam.gserviceaccount.com" \
          --role roles/gkehub.crossProjectServiceAgent
      - |
        gcloud container clusters update {{.NAME}} --location={{.REGION}} \
          --fleet-project={{.FLEET_HOST_PROJECT_ID}} --project={{.PROJECT_ID}}
      - |
        gcloud container fleet mesh update \
         --management automatic \
         --memberships {{.NAME}} \
         --project {{.FLEET_HOST_PROJECT_ID}} \
         --location {{.REGION}}
    vars:
      FLEET_HOST_PROJECT_NUMBER:
        sh: gcloud projects describe {{.FLEET_HOST_PROJECT_ID}} --format "value(projectNumber)"

  install-flux:
    desc: Install and configure Flux
    cmds:
      - |
        flux bootstrap git \
          --url=ssh://git@github.com/PHACDataHub/cpho-phase2 \
          --branch=configure-infra \
          --path=./k8s/ \
          --components="source-controller,kustomize-controller,notification-controller" \
          --components-extra="image-reflector-controller,image-automation-controller"

