apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: server
  name: server
  namespace: server
spec:
  selector:
    matchLabels:
      app: server
  strategy: {}
  template:
    metadata:
      labels:
        app: server
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "false"
    spec:
      containers:
      - name: istio-proxy
        image: auto
        # istio-proxies are injected by anthos, see `istio.io/rev: asm-managed` in ../namespace.yaml
        # these are overrides for the default configuration of those injected proxy sidecars
        resources:
          requests:
            # Experiment: using the minimum pod resources https://cloud.google.com/kubernetes-engine/docs/concepts/autopilot-resource-requests#compute-class-min-max
            cpu: 50m # + `server` container = 250m
            memory: 112Mi # + `server` container = 512MiB
      - name: server
        securityContext:
          runAsUser: 5678
        image: northamerica-northeast1-docker.pkg.dev/phx-01h4rr1468rj3v5k60b1vserd3/cpho-phase2-artifact-registry-for-cloud-run/cpho-phase2:main-d6ceec8e-1700595131 # {"$imagepolicy": "flux-system:server"}
        env:
        - name: IS_K8S
          value: "true"
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: django-secret-key
              key: secret-key
        - name: ALLOWED_HOSTS
          value: "hopic-sdpac.k8s.phac-aspc.alpha.canada.ca,hopic-sdpac.phac-aspc.alpha.canada.ca,34.149.100.163,localhost,34.152.0.41"
        - name: SLACK_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: slack-webhook-url
              key: slack-url
        - name: DB_NAME
          value: "cpho-phase2_db"
        - name: DB_HOST
          value: "cpho-postgres14-cluster-rw"
        - name: DB_PORT
          value: "5432"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: cpho-postgres14-cluster-app
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cpho-postgres14-cluster-app
              key: password
        - name: PHAC_ASPC_OAUTH_PROVIDER
          value: "microsoft"
        - name: PHAC_ASPC_OAUTH_APP_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: phac-aspc-oauth-config
              key: client-id
        - name: PHAC_ASPC_OAUTH_APP_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: phac-aspc-oauth-config
              key: client-secret
        - name: PHAC_ASPC_OAUTH_MICROSOFT_TENANT
          valueFrom:
            secretKeyRef:
              name: phac-aspc-oauth-config
              key: microsoft-tenant
        - name: ENABLE_LEGACY_LOG_IN # TODO temporary for dev purposes, not to be used in final prod
          value: "true"
        resources:
          # Autopilot only considers requests (see https://cloud.google.com/kubernetes-engine/docs/concepts/autopilot-resource-requests#resource-limits)
          requests:
            # Experiment: using the minimum pod resources https://cloud.google.com/kubernetes-engine/docs/concepts/autopilot-resource-requests#compute-class-min-max
            cpu: 200m # + `isito-proxy` container = 250m
            memory: 400Mi # + `isito-proxy` container = 512MiB
        readinessProbe:
          httpGet:
            path: /healthcheck
            port: 8080
            httpHeaders:
            - name: Host
              value: hopic-sdpac.k8s.phac-aspc.alpha.canada.ca
          initialDelaySeconds: 35
          periodSeconds: 10
          timeoutSeconds: 3
status: {}
