# Generated by Django 4.1.9 on 2023-05-23 16:31

import cpho.models.user
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import server.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'base_manager_name': 'objects',
            },
            managers=[
                ('objects', cpho.models.user.GroupPrefetcherManager()),
            ],
        ),
        migrations.CreateModel(
            name='DimensionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en', server.fields.CharField(max_length=50)),
                ('name_fr', server.fields.CharField(max_length=50)),
                ('code', server.fields.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='DimensionValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_en', server.fields.CharField(max_length=50)),
                ('name_fr', server.fields.CharField(max_length=50)),
                ('value', server.fields.CharField(max_length=50)),
                ('order', server.fields.FloatField(default=0.0)),
                ('dimension_type', server.fields.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='cpho.dimensiontype')),
            ],
        ),
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', server.fields.CharField(max_length=50)),
                ('category', server.fields.CharField(max_length=50)),
                ('sub_category', server.fields.CharField(max_length=50)),
                ('detailed_indicator', server.fields.CharField(max_length=300)),
                ('sub_indicator_measurement', server.fields.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='IndicatorDatum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_quality', server.fields.CharField(max_length=50)),
                ('value', server.fields.FloatField()),
                ('value_lower_bound', server.fields.FloatField(null=True)),
                ('value_upper_bound', server.fields.FloatField(null=True)),
                ('value_unit', server.fields.CharField(max_length=50)),
                ('single_year_timeframe', server.fields.CharField(max_length=50, null=True)),
                ('multi_year_timeframe', server.fields.CharField(max_length=50, null=True)),
                ('dimension_value', server.fields.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='cpho.dimensionvalue')),
                ('indicator', server.fields.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='cpho.indicator')),
            ],
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', server.fields.IntegerField()),
                ('name_en', server.fields.CharField(max_length=50)),
                ('name_fr', server.fields.CharField(max_length=50)),
            ],
            options={
                'ordering': ['year'],
            },
        ),
        migrations.CreateModel(
            name='PeriodHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('system_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('business_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('year', server.fields.IntegerField()),
                ('name_en', server.fields.CharField(max_length=50)),
                ('name_fr', server.fields.CharField(max_length=50)),
                ('edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('eternal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='cpho.period')),
            ],
            options={
                'ordering': ['business_date'],
                'get_latest_by': 'business_date',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndicatorHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('system_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('business_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', server.fields.CharField(max_length=50)),
                ('category', server.fields.CharField(max_length=50)),
                ('sub_category', server.fields.CharField(max_length=50)),
                ('detailed_indicator', server.fields.CharField(max_length=300)),
                ('sub_indicator_measurement', server.fields.CharField(max_length=150)),
                ('edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('eternal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='cpho.indicator')),
            ],
            options={
                'ordering': ['business_date'],
                'get_latest_by': 'business_date',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndicatorDatumHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('system_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('business_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('approved', models.BooleanField(default=False)),
                ('data_quality', server.fields.CharField(max_length=50)),
                ('value', server.fields.FloatField()),
                ('value_lower_bound', server.fields.FloatField(null=True)),
                ('value_upper_bound', server.fields.FloatField(null=True)),
                ('value_unit', server.fields.CharField(max_length=50)),
                ('single_year_timeframe', server.fields.CharField(max_length=50, null=True)),
                ('multi_year_timeframe', server.fields.CharField(max_length=50, null=True)),
                ('dimension_value', server.fields.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cpho.dimensionvalue')),
                ('edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('eternal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='cpho.indicatordatum')),
                ('indicator', server.fields.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cpho.indicator')),
                ('period', server.fields.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cpho.period')),
            ],
            options={
                'ordering': ['business_date'],
                'get_latest_by': 'business_date',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='indicatordatum',
            name='period',
            field=server.fields.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='cpho.period'),
        ),
        migrations.CreateModel(
            name='DimensionValueHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('system_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('business_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('name_en', server.fields.CharField(max_length=50)),
                ('name_fr', server.fields.CharField(max_length=50)),
                ('value', server.fields.CharField(max_length=50)),
                ('order', server.fields.FloatField(default=0.0)),
                ('dimension_type', server.fields.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cpho.dimensiontype')),
                ('edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('eternal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='cpho.dimensionvalue')),
            ],
            options={
                'ordering': ['business_date'],
                'get_latest_by': 'business_date',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DimensionTypeHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('system_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('business_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('name_en', server.fields.CharField(max_length=50)),
                ('name_fr', server.fields.CharField(max_length=50)),
                ('code', server.fields.CharField(max_length=50)),
                ('edited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('eternal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='cpho.dimensiontype')),
            ],
            options={
                'ordering': ['business_date'],
                'get_latest_by': 'business_date',
                'abstract': False,
            },
        ),
    ]
